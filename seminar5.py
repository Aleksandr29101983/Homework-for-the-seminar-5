# #                           ДОМАШНЕЕ ЗАДАНИЕ К СЕМИНАРУ 5

# ЗАДАЧА 1. Напишите программу, удаляющую из текста все слова, содержащие ""абв"".
#           (Задание из семинара)
# stroka = 'Привет, абвгдэйка! Как твои дела, абвгдеечка?'
# list = stroka.split()
# print(list)
# for i in list:
#     if 'абв' in i:
#         list.remove(i)
# print(list)
# stroka1 = ''
# for i in list:
#     stroka1 += i + ' '
# print(stroka1)



# ЗАДАЧА 2(1). Создайте программу для игры с конфетами человек против человека. 
#              Реализовать игру игрока против игрока в терминале. Игроки ходят друг за другом,
#              вписывая желаемое количество конфет. Первый ход определяется жеребьёвкой. 
#              В конце вывести игрока, который победил
# Условие задачи: На столе лежит 221 конфета. Играют два игрока делая ход друг после друга.
#              Первый ход определяется жеребьёвкой. За один ход можно забрать не более чем 28 
#              конфет. Все конфеты оппонента достаются сделавшему последний ход. 
# В качестве дополнительного усложнения можно:
#         a) Добавьте игру против бота ( где бот берет рандомное количество конфет от 0 до 28)
#         b) Подумайте как наделить бота ""интеллектом"" (есть алгоритм, позволяющий выяснить
#            какое количесвто конфет необходимо брать, чтобы гарантированно победить, 
#            соответственно внедрить этот алгоритм боту )
# import random
# korzina = 221
# lisa = 0
# papa = 0
# temp = 0
# ger = 0
# print('Правила игры:\n На столе лежит 221 конфета. Играют два игрока делая ход друг после друга. Первый ход определяется жеребьёвкой.\n  За один ход можно забрать не болеечем 28 конфет. Все конфеты оппонента достаются сделавшему последний ход.')
# print('Приступаем к жеребьевке!')
    
# def lisaStep(korzina, lisa):
#     temp = int(input('Игрок Лиза, возьмите конфеты: ' ))
#     if korzina<temp<=28:
#         print(f'Игрок Лиза, в корзине осталось только {korzina} конфет. Попытайтесь снова')
#         lisaStep(korzina, lisa)
#     elif temp > 28:
#         print('Игрок Лиза, вы пытаетесь взять слишком много конфет. Попытайтесь снова')
#         lisaStep(korzina, lisa)
#     else:   
#         lisa+=temp
#         korzina-=temp
#     if korzina>0:
#         #print(f'У Лизы {lisa} конфет')
#         papaStep(korzina, papa)
#     else:
#         print('Игрок Лиза победитель и получает все 221 конфет')
    
# def papaStep(korzina, papa):
#     temp = int(input('Игрок Папа, возьмите конфеты: ' ))
#     if korzina<temp<=28:
#         print(f'Игрок Папа, в корзине осталось только {korzina} конфет. Попытайтесь снова')
#         papaStep(korzina, papa)
#     elif temp > 28:
#         print('Игрок Папа, вы пытаетесь взять слишком много конфет. Попытайтесь снова')
#         papaStep(korzina, papa)
#     else:   
#         papa+=temp
#         korzina-=temp
#     if korzina>0:
#         #print(f'У Папы {papa} конфет')
#         lisaStep(korzina, lisa)
#     else:
#         print('Игрок Папа победитель и получает все 221 конфет')
        
    
# if random.randint(0, 1) == 0:
#     ger = int(input('Игрок Лиза, выберите 0 или 1: '))
#     if random.randint(0, 1) != ger:
#         print(f'Генератор случайных чисел выдал {ger}, поэтому первой ходит Лиза!')
#         lisaStep(korzina, lisa)
#     else:
#         print(f'Генератор случайных чисел выдал {ger}, поэтому первым ходит Папа!')
#         papaStep(korzina, papa)
# else:
#     ger = int(input('Игрок Папа, выберите 0 или 1: '))
#     if random.randint(0, 1) != ger:
#         print(f'Генератор случайных чисел выдал {ger}, поэтому первым ходит Папа!')
#         papaStep(korzina, papa)
#     else:
#         print(f'Генератор случайных чисел выдал {ger}, поэтому первой ходит Лиза!')
#         lisaStep(korzina, lisa)    
        
        

# 
# ЗАДАЧА 2(2). Создайте программу для игры в ""Крестики-нолики"". Игра реализуется в терминале,
#              игроки ходят поочередно, необходимо вывести карту (как удобнее, можно например
#              в виде списка, внутри которого будут 3 списка по 3 элемента, каждый из которого
#              обозначает соответсвующие клетки от 1 до 9), сделать проверку не занята ли 
#              клетка, на которую мы хотим поставить крестик или нолик, и проверку на победу
#              (стоят ли крестики или нолик в ряд по диагонали, вертикали, горизонтали)

# ЗАДАЧА 3. Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
#           Модуль сжатия, для чисел: Входные данные: # 111112222334445
#                                    Выходные данные: 5142233415
#           Также должно работать и для букв, входные данные: AAAAAAFDDCCCCCCCAEEEEEEEEEEEEEEEEE
#                                            Выходные данные: 6A1F2D7C1A17E
#           (5 - количество единиц, далее сама единица, 4 - количество двоек, далее сама двойка
#           и т.д)
#           Модуль восстановления работет в обратную сторону - из строки выходных данных, 
#           получить строку входных данных.

# Упаковка:
# stroka = 'AAAAAAFDDCCCCCCCAEEEEEEEEEEEEEEEEW'
# list = list(stroka)
# print(list)
# shortStroka = ''
# temp = 1
# while len(list)>1:
#     if list[0] == list[1]:
#         temp+=1
#         del list[0]
#     else:
#         shortStroka+=str(temp)+list[0]
#         temp = 1
#         del list[0]
# shortStroka+=str(temp)+list[0]
# print(shortStroka)

# Распаковка:
# shortStroka = '6A1F2D7C1A16E1W'
# longStroka = ''
# count = ''
# for char in shortStroka:
#     if char.isdigit():
#         count += char
#     else:
#         longStroka += char * int(count)
#         count = ''
# print(longStroka)
